{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project Zero\\\\client\\\\src\\\\contexts\\\\PostContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useMemo } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useAsync } from \"../hooks/useAsync\";\nimport { getPost } from \"../services/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\nexport function usePost() {\n  _s();\n  return useContext(Context);\n}\n_s(usePost, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function PostProvider({\n  children\n}) {\n  _s2();\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    error,\n    value: post\n  } = useAsync(() => getPost(id), [id]);\n  const commentsByParentsId = useMemo(() => {\n    if ((post === null || post === void 0 ? void 0 : post.comments) == null) return [];\n    const group = {};\n    post.comments.array.forEach(comment => {\n      group[comment.parentId] ||= [];\n      group[comment.parentId].push(comment);\n    });\n    return;\n  }, [post === null || post === void 0 ? void 0 : post.comments]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      post: {\n        id,\n        ...post\n      }\n    },\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"error-msg\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s2(PostProvider, \"8bnMbdebhdFl/J1I41+ZLyyar98=\", false, function () {\n  return [useParams, useAsync];\n});\n_c = PostProvider;\nvar _c;\n$RefreshReg$(_c, \"PostProvider\");","map":{"version":3,"names":["React","useContext","useMemo","useParams","useAsync","getPost","jsxDEV","_jsxDEV","Context","createContext","usePost","_s","PostProvider","children","_s2","id","loading","error","value","post","commentsByParentsId","comments","group","array","forEach","comment","parentId","push","Provider","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Project Zero/client/src/contexts/PostContext.js"],"sourcesContent":["import React, { useContext, useMemo } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useAsync } from \"../hooks/useAsync\"\r\nimport { getPost } from \"../services/posts\"\r\n\r\nconst Context = React.createContext()\r\n\r\nexport function usePost() {\r\n    return useContext(Context)\r\n}\r\n\r\nexport function PostProvider({ children }) {\r\n    const { id } = useParams()\r\n    const { loading, error, value: post } = useAsync(() => getPost(id), [id])\r\n    const commentsByParentsId = useMemo(() => {\r\n        if (post?.comments == null) return []\r\n        const group = {}\r\n        post.comments.array.forEach(comment => {\r\n            group[comment.parentId] ||= []\r\n            group[comment.parentId].push(comment)\r\n\r\n        });\r\n        return\r\n    }, [post?.comments])\r\n    return (\r\n        <Context.Provider value={{\r\n            post: { id, ...post },\r\n        }}>\r\n            {loading ? (\r\n                <h1>Loading</h1>\r\n            ) : error ? (\r\n                <h1 className=\"error-msg\">{error}</h1>\r\n            ) : (\r\n                children\r\n            )}\r\n        </Context.Provider>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,OAAO,QAAQ,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,gBAAGR,KAAK,CAACS,aAAa,CAAC,CAAC;AAErC,OAAO,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACtB,OAAOV,UAAU,CAACO,OAAO,CAAC;AAC9B;AAACG,EAAA,CAFeD,OAAO;AAIvB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACvC,MAAM;IAAEC;EAAG,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAC1B,MAAM;IAAEa,OAAO;IAAEC,KAAK;IAAEC,KAAK,EAAEC;EAAK,CAAC,GAAGf,QAAQ,CAAC,MAAMC,OAAO,CAACU,EAAE,CAAC,EAAE,CAACA,EAAE,CAAC,CAAC;EACzE,MAAMK,mBAAmB,GAAGlB,OAAO,CAAC,MAAM;IACtC,IAAI,CAAAiB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,QAAQ,KAAI,IAAI,EAAE,OAAO,EAAE;IACrC,MAAMC,KAAK,GAAG,CAAC,CAAC;IAChBH,IAAI,CAACE,QAAQ,CAACE,KAAK,CAACC,OAAO,CAACC,OAAO,IAAI;MACnCH,KAAK,CAACG,OAAO,CAACC,QAAQ,CAAC,KAAK,EAAE;MAC9BJ,KAAK,CAACG,OAAO,CAACC,QAAQ,CAAC,CAACC,IAAI,CAACF,OAAO,CAAC;IAEzC,CAAC,CAAC;IACF;EACJ,CAAC,EAAE,CAACN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,QAAQ,CAAC,CAAC;EACpB,oBACId,OAAA,CAACC,OAAO,CAACoB,QAAQ;IAACV,KAAK,EAAE;MACrBC,IAAI,EAAE;QAAEJ,EAAE;QAAE,GAAGI;MAAK;IACxB,CAAE;IAAAN,QAAA,EACGG,OAAO,gBACJT,OAAA;MAAAM,QAAA,EAAI;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GAChBf,KAAK,gBACLV,OAAA;MAAI0B,SAAS,EAAC,WAAW;MAAApB,QAAA,EAAEI;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GAEtCnB;EACH;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE3B;AAAClB,GAAA,CA1BeF,YAAY;EAAA,QACTT,SAAS,EACgBC,QAAQ;AAAA;AAAA8B,EAAA,GAFpCtB,YAAY;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}